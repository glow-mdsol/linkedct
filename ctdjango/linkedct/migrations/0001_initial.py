# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('zip', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Alt_name',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('source', models.CharField(max_length=255)),
                ('id', models.CharField(max_length=255)),
                ('altname', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Arm_group',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('arm_group_label', models.CharField(max_length=255, blank=True)),
                ('description', models.TextField(blank=True)),
                ('arm_group_type', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('city_name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Condition_browse',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('phone_ext', models.CharField(max_length=255, blank=True)),
                ('phone', models.CharField(max_length=255, blank=True)),
                ('email', models.CharField(max_length=255, blank=True)),
                ('last_name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coordinates',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('latitude', models.DecimalField(max_digits=10, decimal_places=7)),
                ('longitude', models.DecimalField(max_digits=10, decimal_places=7)),
                ('address', models.ForeignKey(related_name='coordinates__address', to='linkedct.Address')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('country_name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Eligibility',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('criteria', models.TextField()),
                ('maximum_age', models.CharField(max_length=255, blank=True)),
                ('healthy_volunteers', models.CharField(max_length=255, blank=True)),
                ('study_pop', models.TextField()),
                ('minimum_age', models.CharField(max_length=255, blank=True)),
                ('gender', models.CharField(max_length=255, blank=True)),
                ('sampling_method', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='External_linkage',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('from_object_slug', models.SlugField(max_length=128)),
                ('from_object_type', models.CharField(max_length=128)),
                ('score', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='External_resource',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('source_url', models.URLField(max_length=2550)),
                ('source_id', models.CharField(max_length=255)),
                ('source_label', models.CharField(max_length=255)),
                ('source_name', models.CharField(max_length=255)),
                ('source_format', models.CharField(max_length=32, choices=[(b'rdf', b'RDF'), (b'html', b'HTML'), (b'rdf/html', b'RDF_HTML')])),
                ('related_model_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('facility_name', models.CharField(max_length=255, blank=True)),
                ('address', models.ForeignKey(related_name='facility__address', to='linkedct.Address', null=True)),
                ('interlinks', models.ManyToManyField(related_name='facility_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('arm_group_label', models.CharField(max_length=255, blank=True)),
                ('description', models.TextField(blank=True)),
                ('other_name', models.CharField(max_length=255, blank=True)),
                ('intervention_type', models.CharField(max_length=255, blank=True)),
                ('intervention_name', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='intervention_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Intervention_browse',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('interlinks', models.ManyToManyField(related_name='intervention_browse_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Investigator',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('last_name', models.CharField(max_length=255, blank=True)),
                ('role', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='investigator_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('interlinks', models.ManyToManyField(related_name='keyword_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=1023, blank=True)),
                ('url', models.URLField(max_length=511, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='link_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Linkage',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('from_object_slug', models.SlugField(max_length=128)),
                ('from_object_type', models.CharField(max_length=128)),
                ('to_object_slug', models.SlugField(max_length=128)),
                ('to_object_type', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Linkage_method',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('type', models.CharField(max_length=32, choices=[(b'id-based', b'ID_BASED'), (b'fuzzy', b'FUZZY_MATCHING'), (b'exact', b'EXACT_MATCHING'), (b'semantic', b'SEMANTIC'), (b'semantic/fuzzy', b'SEMANTIC_FUZZY')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=255, blank=True)),
                ('contact_backups', models.ManyToManyField(related_name='linkedct_location_related1', to='linkedct.Contact')),
                ('contacts', models.ManyToManyField(related_name='linkedct_location_related2', to='linkedct.Contact')),
                ('facility', models.ForeignKey(related_name='linkedct_location_related', to='linkedct.Facility', null=True)),
                ('interlinks', models.ManyToManyField(related_name='location_interlinks_to', to='linkedct.External_linkage')),
                ('investigators', models.ManyToManyField(related_name='linkedct_location_related', to='linkedct.Investigator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mesh_term',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('interlinks', models.ManyToManyField(related_name='mesh_term_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('safety_issue', models.CharField(max_length=255, blank=True)),
                ('measure', models.CharField(max_length=255, blank=True)),
                ('description', models.TextField(blank=True)),
                ('time_frame', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='outcome_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Overall_official',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('last_name', models.CharField(max_length=255, blank=True)),
                ('role', models.CharField(max_length=255, blank=True)),
                ('affiliation', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='overall_official_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Oversight_info',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('authority', models.CharField(max_length=255, blank=True)),
                ('has_dmc', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='oversight_info_interlinks_to', to='linkedct.External_linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provenance',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('url', models.URLField(max_length=512)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('encoding', models.CharField(max_length=20, blank=True)),
                ('signature', models.CharField(max_length=33, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('citation', models.TextField(blank=True)),
                ('PMID', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='reference_interlinks_to', to='linkedct.External_linkage')),
                ('provenances', models.ManyToManyField(to='linkedct.Provenance')),
                ('relateds', models.ManyToManyField(related_name='reference_related_to', to='linkedct.Linkage')),
                ('similars', models.ManyToManyField(related_name='reference_similar_to', to='linkedct.Linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Responsible_party',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('organization', models.CharField(max_length=255, blank=True)),
                ('name_title', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='responsible_party_interlinks_to', to='linkedct.External_linkage')),
                ('provenances', models.ManyToManyField(to='linkedct.Provenance')),
                ('relateds', models.ManyToManyField(related_name='responsible_party_related_to', to='linkedct.Linkage')),
                ('similars', models.ManyToManyField(related_name='responsible_party_similar_to', to='linkedct.Linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('agency_class', models.CharField(max_length=255, blank=True)),
                ('agency', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='sponsor_interlinks_to', to='linkedct.External_linkage')),
                ('provenances', models.ManyToManyField(to='linkedct.Provenance')),
                ('relateds', models.ManyToManyField(related_name='sponsor_related_to', to='linkedct.Linkage')),
                ('similars', models.ManyToManyField(related_name='sponsor_similar_to', to='linkedct.Linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor_group',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('collaborators', models.ManyToManyField(related_name='sponsor_group_collaborator_related', to='linkedct.Sponsor')),
                ('interlinks', models.ManyToManyField(related_name='sponsor_group_interlinks_to', to='linkedct.External_linkage')),
                ('lead_sponsor', models.ForeignKey(related_name='sponsor_group_lead_sponsor_related', to='linkedct.Sponsor', null=True)),
                ('provenances', models.ManyToManyField(to='linkedct.Provenance')),
                ('relateds', models.ManyToManyField(related_name='sponsor_group_related_to', to='linkedct.Linkage')),
                ('similars', models.ManyToManyField(related_name='sponsor_group_similar_to', to='linkedct.Linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_duplicated_by', models.BooleanField(default=False)),
                ('is_interlinked', models.BooleanField(default=False)),
                ('state_name', models.CharField(max_length=255, blank=True)),
                ('interlinks', models.ManyToManyField(related_name='state_interlinks_to', to='linkedct.External_linkage')),
                ('provenances', models.ManyToManyField(to='linkedct.Provenance')),
                ('relateds', models.ManyToManyField(related_name='state_related_to', to='linkedct.Linkage')),
                ('similars', models.ManyToManyField(related_name='state_similar_to', to='linkedct.Linkage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('label', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=128, serialize=False, primary_key=True)),
                ('trialid', models.SlugField(max_length=255)),
                ('lookup_name', models.SlugField(max_length=255)),
                ('lastchanged_date', models.CharField(max_length=255, blank=True)),
                ('firstreceived_results_date', models.CharField(max_length=255, blank=True)),
                ('firstreceived_date', models.CharField(max_length=255, blank=True)),
                ('id_info_nct_id', models.CharField(max_length=255, blank=True)),
                ('overall_status', models.CharField(max_length=255, blank=True)),
                ('id_info_secondary_id', models.CharField(max_length=255, blank=True)),
                ('biospec_retention', models.CharField(max_length=255, blank=True)),
                ('required_header_link_text', models.CharField(max_length=255, blank=True)),
                ('enrollment', models.CharField(max_length=255, blank=True)),
                ('number_of_arms', models.CharField(max_length=255, blank=True)),
                ('is_section_801', models.CharField(max_length=255, blank=True)),
                ('is_fda_regulated', models.CharField(max_length=255, blank=True)),
                ('brief_title', models.CharField(max_length=1023, blank=True)),
                ('acronym', models.CharField(max_length=255, blank=True)),
                ('official_title', models.CharField(max_length=1023, blank=True)),
                ('study_type', models.CharField(max_length=255, blank=True)),
                ('id_info_nct_alias', models.CharField(max_length=255, blank=True)),
                ('completion_date', models.CharField(max_length=255, blank=True)),
                ('verification_date', models.CharField(max_length=255, blank=True)),
                ('why_stopped', models.CharField(max_length=255, blank=True)),
                ('id_info_org_study_id', models.CharField(max_length=255, blank=True)),
                ('required_header_url', models.URLField(blank=True)),
                ('study_design', models.CharField(max_length=255, blank=True)),
                ('source', models.CharField(max_length=255, blank=True)),
                ('primary_completion_date', models.CharField(max_length=255, blank=True)),
                ('brief_summary', models.TextField()),
                ('number_of_groups', models.CharField(max_length=255, blank=True)),
                ('required_header_download_date', models.CharField(max_length=255, blank=True)),
                ('phase', models.CharField(max_length=255, blank=True)),
                ('start_date', models.CharField(max_length=255, blank=True)),
                ('has_expanded_access', models.CharField(max_length=255, blank=True)),
                ('biospec_descr', models.TextField(blank=True)),
                ('detailed_description', models.TextField(blank=True)),
                ('arm_groups', models.ManyToManyField(related_name='trial_arm_group_related', to='linkedct.Arm_group')),
                ('condition_browse', models.ForeignKey(related_name='trial_condition_browse_related', to='linkedct.Condition_browse', null=True)),
                ('conditions', models.ManyToManyField(related_name='trial_conditions_related', to='linkedct.Condition')),
                ('eligibility', models.ForeignKey(related_name='clinical_study__eligibility', to='linkedct.Eligibility', null=True)),
                ('intervention_browse', models.ForeignKey(related_name='trial_intervention_related', to='linkedct.Intervention_browse', null=True)),
                ('interventions', models.ManyToManyField(related_name='trial_intervention_related', to='linkedct.Intervention')),
                ('keywords', models.ManyToManyField(related_name='trial_keyword_related', to='linkedct.Keyword')),
                ('links', models.ManyToManyField(related_name='trial_links_related', to='linkedct.Link')),
                ('location_countries', models.ManyToManyField(related_name='trial_location_countries_related', to='linkedct.Country')),
                ('locations', models.ManyToManyField(related_name='trial_locations_related', to='linkedct.Location')),
                ('overall_contact', models.ForeignKey(related_name='clinical_study__overall_contact', to='linkedct.Contact', null=True)),
                ('overall_contact_backup', models.ForeignKey(related_name='clinical_study__overall_contact_backup', to='linkedct.Contact', null=True)),
                ('overall_officials', models.ManyToManyField(related_name='trial_overall_official_related', to='linkedct.Overall_official')),
                ('oversight_info', models.ForeignKey(related_name='clinical_study__oversight_info', to='linkedct.Oversight_info', null=True)),
                ('primary_outcomes', models.ManyToManyField(related_name='trial_primary_outcome_related', to='linkedct.Outcome')),
                ('provenance', models.ForeignKey(related_name='trial_provenance_related', to='linkedct.Provenance')),
                ('references', models.ManyToManyField(related_name='trial_reference_related', to='linkedct.Reference')),
                ('removed_countries', models.ManyToManyField(related_name='trial_removed_countries_related', to='linkedct.Country')),
                ('responsible_party', models.ForeignKey(related_name='clinical_study_responsible_party_related', to='linkedct.Responsible_party', null=True)),
                ('results_references', models.ManyToManyField(related_name='trial_results_reference_related', to='linkedct.Reference')),
                ('secondary_outcomes', models.ManyToManyField(related_name='trial_secondary_outcome_related', to='linkedct.Outcome')),
                ('sponsor_group', models.ForeignKey(related_name='clinical_study__sponsors', to='linkedct.Sponsor_group', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('url', models.CharField(max_length=128, serialize=False, primary_key=True)),
                ('status', models.CharField(max_length=128, blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='oversight_info',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='oversight_info',
            name='relateds',
            field=models.ManyToManyField(related_name='oversight_info_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='oversight_info',
            name='similars',
            field=models.ManyToManyField(related_name='oversight_info_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='overall_official',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='overall_official',
            name='relateds',
            field=models.ManyToManyField(related_name='overall_official_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='overall_official',
            name='similars',
            field=models.ManyToManyField(related_name='overall_official_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='relateds',
            field=models.ManyToManyField(related_name='outcome_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='similars',
            field=models.ManyToManyField(related_name='outcome_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='mesh_term',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='mesh_term',
            name='relateds',
            field=models.ManyToManyField(related_name='mesh_term_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='mesh_term',
            name='similars',
            field=models.ManyToManyField(related_name='mesh_term_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='location',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='location',
            name='relateds',
            field=models.ManyToManyField(related_name='location_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='location',
            name='similars',
            field=models.ManyToManyField(related_name='location_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='linkage',
            name='method',
            field=models.ForeignKey(related_name='linkage_method_relation', to='linkedct.Linkage_method'),
        ),
        migrations.AddField(
            model_name='link',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='link',
            name='relateds',
            field=models.ManyToManyField(related_name='link_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='link',
            name='similars',
            field=models.ManyToManyField(related_name='link_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='relateds',
            field=models.ManyToManyField(related_name='keyword_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='similars',
            field=models.ManyToManyField(related_name='keyword_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='investigator',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='investigator',
            name='relateds',
            field=models.ManyToManyField(related_name='investigator_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='investigator',
            name='similars',
            field=models.ManyToManyField(related_name='investigator_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='intervention_browse',
            name='mesh_terms',
            field=models.ManyToManyField(related_name='linkedct_intervention_browse_related', to='linkedct.Mesh_term'),
        ),
        migrations.AddField(
            model_name='intervention_browse',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='intervention_browse',
            name='relateds',
            field=models.ManyToManyField(related_name='intervention_browse_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='intervention_browse',
            name='similars',
            field=models.ManyToManyField(related_name='intervention_browse_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='intervention',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='intervention',
            name='relateds',
            field=models.ManyToManyField(related_name='intervention_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='intervention',
            name='similars',
            field=models.ManyToManyField(related_name='intervention_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='facility',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='facility',
            name='relateds',
            field=models.ManyToManyField(related_name='facility_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='facility',
            name='similars',
            field=models.ManyToManyField(related_name='facility_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='external_linkage',
            name='method',
            field=models.ForeignKey(related_name='linkage_method_link', to='linkedct.Linkage_method'),
        ),
        migrations.AddField(
            model_name='external_linkage',
            name='to_resource',
            field=models.ForeignKey(related_name='link_to_external_resource', to='linkedct.External_resource'),
        ),
        migrations.AddField(
            model_name='eligibility',
            name='interlinks',
            field=models.ManyToManyField(related_name='eligibility_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='eligibility',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='eligibility',
            name='relateds',
            field=models.ManyToManyField(related_name='eligibility_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='eligibility',
            name='similars',
            field=models.ManyToManyField(related_name='eligibility_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='country',
            name='interlinks',
            field=models.ManyToManyField(related_name='country_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='country',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='country',
            name='relateds',
            field=models.ManyToManyField(related_name='country_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='country',
            name='similars',
            field=models.ManyToManyField(related_name='country_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='contact',
            name='interlinks',
            field=models.ManyToManyField(related_name='contact_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='contact',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='contact',
            name='relateds',
            field=models.ManyToManyField(related_name='contact_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='contact',
            name='similars',
            field=models.ManyToManyField(related_name='contact_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='condition_browse',
            name='interlinks',
            field=models.ManyToManyField(related_name='condition_browse_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='condition_browse',
            name='mesh_terms',
            field=models.ManyToManyField(related_name='linkedct_condition_browse_related', to='linkedct.Mesh_term'),
        ),
        migrations.AddField(
            model_name='condition_browse',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='condition_browse',
            name='relateds',
            field=models.ManyToManyField(related_name='condition_browse_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='condition_browse',
            name='similars',
            field=models.ManyToManyField(related_name='condition_browse_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='condition',
            name='interlinks',
            field=models.ManyToManyField(related_name='condition_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='condition',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='condition',
            name='relateds',
            field=models.ManyToManyField(related_name='condition_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='condition',
            name='similars',
            field=models.ManyToManyField(related_name='condition_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='city',
            name='interlinks',
            field=models.ManyToManyField(related_name='city_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='city',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='city',
            name='relateds',
            field=models.ManyToManyField(related_name='city_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='city',
            name='similars',
            field=models.ManyToManyField(related_name='city_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='arm_group',
            name='interlinks',
            field=models.ManyToManyField(related_name='arm_group_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='arm_group',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='arm_group',
            name='relateds',
            field=models.ManyToManyField(related_name='arm_group_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='arm_group',
            name='similars',
            field=models.ManyToManyField(related_name='arm_group_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(related_name='address__city', to='linkedct.City', null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(related_name='address__country', to='linkedct.Country', null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='interlinks',
            field=models.ManyToManyField(related_name='address_interlinks_to', to='linkedct.External_linkage'),
        ),
        migrations.AddField(
            model_name='address',
            name='provenances',
            field=models.ManyToManyField(to='linkedct.Provenance'),
        ),
        migrations.AddField(
            model_name='address',
            name='relateds',
            field=models.ManyToManyField(related_name='address_related_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='address',
            name='similars',
            field=models.ManyToManyField(related_name='address_similar_to', to='linkedct.Linkage'),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.ForeignKey(related_name='address__state', to='linkedct.State', null=True),
        ),
    ]
